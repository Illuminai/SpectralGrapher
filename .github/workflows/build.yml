name: Build

on: [ push, pull_request, workflow_dispatch ]

env:
  sg_vulkan_sdk_version: "1.2.189.0"
  sg_vulkan_sdk_path: "$GITHUB_WORKSPACE/../vulkan_sdk/"

jobs:
  Linux:
    name: ${{ matrix.config.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Linux Clang (Release)"
            artifact: "SpectralGrapher-linux-clang-release"
            cc: "clang"
            cxx: "clang++"
            cmake-build-type: "Release"

          - name: "Linux Clang (Debug)"
            artifact: "SpectralGrapher-linux-clang-debug"
            cc: "clang"
            cxx: "clang++"
            cmake-build-type: "Debug"

          - name: "Linux GCC (Release)"
            artifact: "SpectralGrapher-linux-gcc-release"
            cc: "gcc"
            cxx: "g++"
            cmake-build-type: "Debug"

          - name: "Linux GCC (Debug)"
            artifact: "SpectralGrapher-linux-gcc-debug"
            cc: "gcc"
            cxx: "g++"
            cmake-build-type: "Debug"

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Initialize environment
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            curl \
            xorg-dev \
            libvulkan-dev \

      - name: Install Vulkan SDK
        shell: bash
        run: |
          curl -LS -o vulkansdk.tar.gz \
            https://sdk.lunarg.com/sdk/download/${{ env.sg_vulkan_sdk_version }}/linux/vulkansdk-linux-x86_64-${{ env.sg_vulkan_sdk_version }}.tar.gz
          mkdir "${{ env.sg_vulkan_sdk_path }}"
          tar xfz vulkansdk.tar.gz -C "${{ env.sg_vulkan_sdk_path }}"

      - name: Configure CMake
        shell: bash
        run: |
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}
          export VULKAN_SDK="${{ env.sg_vulkan_sdk_path }}/${{ env.sg_vulkan_sdk_version }}/x86_64"
          export PATH=$VULKAN_SDK/bin:$PATH
          export LD_LIBRARY_PATH=$VULKAN_SDK/lib:$LD_LIBRARY_PATH
          export VK_LAYER_PATH=$VULKAN_SDK/etc/explicit_layer.d
          cmake -S . -B bin/release -D CMAKE_BUILD_TYPE=${{matrix.config.cmake-build-type}}

      - name: Build SpectralGrapher
        shell: bash
        run: |
          cmake --build ${{github.workspace}}/bin/release --target SpectralGrapher

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          path: ${{github.workspace}}/bin/release/SpectralGrapher
          name: ${{ matrix.config.artifact }}


  Windows:
    name: ${{ matrix.config.name }}
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "Windows MSVC (Release)"
            artifact: "SpectralGrapher-windows-msvc-release"
            cc: "cl"
            cxx: "cl"
            cmake-build-type: "Release"

          - name: "Windows MSVC (Debug)"
            artifact: "SpectralGrapher-windows-msvc-debug"
            cc: "cl"
            cxx: "cl"
            cmake-build-type: "Debug"

          - name: "Windows MinGW (Release)"
            artifact: "SpectralGrapher-windows-mingw-release"
            cc: "gcc"
            cxx: "g++"
            cmake-build-type: "Release"

          - name: "Windows MinGW (Debug)"
            artifact: "SpectralGrapher-windows-mingw-debug"
            cc: "gcc"
            cxx: "g++"
            cmake-build-type: "Debug"

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Vulkan SDK
        shell: cmd
        run: |
          curl --url "https://sdk.lunarg.com/sdk/download/${{ env.sg_vulkan_sdk_version }}/windows/VulkanSDK-${{ env.sg_vulkan_sdk_version }}-Installer.exe" -o "VulkanSDK.exe"
          7z x -aoa VulkanSDK.exe -oC:\\VulkanSDK\\${{env.sg_vulkan_sdk_version}}

      - name: Configure CMake
        shell: powershell
        run: |
          $Env:CC = "${{ matrix.config.cc }}"
          $Env:CXX = "${{ matrix.config.cxx }}"
          $Env:VULKAN_SDK = "C:/VulkanSDK/${{ env.sg_vulkan_sdk_version }}"
          $Env:Path += ";C:/VulkanSDK/${{ env.sg_vulkan_sdk_version }}/Bin"
          $Env:LD_LIBRARY_PATH += ";C:/VulkanSDK/${{ env.sg_vulkan_sdk_version }}/Lib";
          cmake -S . -B ${{github.workspace}}/bin/release -D CMAKE_BUILD_TYPE=${{matrix.config.cmake-build-type}} -DCMAKE_DEPENDS_USE_COMPILER=FALSE -G "CodeBlocks - NMake Makefiles" -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX

      - name: Build SpectralGrapher
        shell: powershell
        run: |
          cmake --build ${{github.workspace}}/bin/release --target SpectralGrapher --config ${{matrix.config.cmake-build-type}}
          tree .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          path: ${{github.workspace}}/bin/release/SpectralGrapher.exe
          name: ${{ matrix.config.artifact }}